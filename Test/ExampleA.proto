
import "csharpgen.proto";

package ExampleNamespaceA;

message Person {
  option namespace = "Personal";
  
  required string name = 1;
  required int32 id = 2;
  optional string email = 3;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

  message PhoneNumber {
    required string number = 1;
    optional PhoneType type = 2 [default = HOME];
  }

  repeated PhoneNumber phone = 4;
}

message AddressBook {
    repeated Person List = 1;
}

//This will be ignored
option unknown_file_option = "dobado";

//This class is documented here:
//With multiple lines
message my_message_v1
{
	option namespace = "Mine";
    option preserveunknown = true;

    //This will be ignored
	option unknown_message_option = "dobado";

	//This field is important to comment as we just did here
	required int32 field_a = 1;
}

message my_message_v2
{
	option namespace = "Yours";

	required int32 field_a = 1;
	required double field_b = 2;
	required float field_c = 3;
	required int32 field_d = 4;
	required int64 field_e = 5;
	required uint32 field_f = 6;
	required uint64 field_g = 7;
	required sint32 field_h = 8;
	required sint64 field_i = 9;
	required fixed32 field_j = 10;
	required fixed64 field_k = 11;
	required sfixed32 field_l = 12;
	required sfixed64 field_m = 13;
	required bool field_n = 14;
	required string field_o = 15;
	required bytes field_p = 16;

	enum my_enum
	{
		option enum_option = "dobado";
		//First test
		ETest1 = 0;
		//Second test
		ETest2 = 3;
		ETest3 = 2;
	}

	required my_enum field_q = 17;
	optional my_enum field_r = 18 [default = ETest2];
	
	optional string dummy = 19 [deprecated=true, access=protected];
	
	repeated uint32 field_t = 20 [packed=true];
	repeated uint32 field_s = 21;
    
	optional their_message field_u = 22;
	
	repeated their_message field_v = 23;
}

//This is a demonstration of features only present in ProtoBuf Code Generator
message local_features
{
    //Namespace for clas
    option namespace = "Local";

    //Call BeforeSerialize and AfterDeserialize
	option triggers = true;
    
    //Change class access type. Default: public
	option access = internal;
    
    //Store unrecognized fields during deserialization that
    // will be written back when serializing the class
    option preserveunknown = true;
    
    //Make class field of type TimeSpan, serialized to Ticks
	required int64 Uptime = 1 [codetype=TimeSpan];
    
    //Make class field of type DateTime, serialized to Ticks
	required int64 DueDate = 2 [codetype=DateTime];
    
    //Do not generate class field, must be implemented in other partial class
	required double Amount = 3 [generate=false];
    
    //Custom field access types. Default: public
	optional string Denial = 4 [access=private];
	optional string Secret = 5 [access=protected];
	optional string Internal = 6 [access=internal];
	optional string PR = 7 [access=public];
    
    //Generate a c# readonly field
    optional my_message_v1 testing_read_only = 8 [readonly=true]; 
    
    //When deserializing this one must be set to a class before
    required interface_test MyInterface = 9;
    optional struct_test MyStruct = 10;
    optional external_struct MyExtStruct = 11;
    optional external_class MyExtClass = 12;
}

//Testing local struct serialization
message interface_test
{
    option type=interface;
}

//Testing local struct serialization
message struct_test
{
    option type=struct;
}

//Testing external struct serialization
message external_struct
{
    option namespace = TestB;
    option type = struct;
    option external = true;
}


//External sealed class test, we have no posibility to modify this one
message external_class
{
    option namespace = TestB;
    option external = true;
}

//Serializer for this one is included in TestB
//Here we only need to include the correct namespace, name and the "external" option
message their_message
{
    option namespace = "Theirs";
    option imported = true;
}
